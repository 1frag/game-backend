# Generated by Django 2.2.4 on 2019-08-18 21:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gamer',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('password', models.CharField(max_length=120)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('date_sign_up', models.DateTimeField(auto_now_add=True)),
                ('sex', models.IntegerField(blank=True, default=0, null=True)),
                ('money', models.IntegerField(default=0)),
                ('rating', models.IntegerField(default=0)),
                ('is_superuser', models.BooleanField(default=0)),
                ('mileage', models.IntegerField(default=0)),
                ('hints', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=4, unique=True)),
                ('duration', models.IntegerField(null=True)),
                ('type_game', models.IntegerField()),
                ('cnt_gamers', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('CR', 'CREATED'), ('IN', 'INITIALIZED'), ('ST', 'STARTED'), ('FN', 'FINISHED'), ('AR', 'ARCHIVED')], default='CR', max_length=2)),
                ('time_end_game', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('status', models.CharField(choices=[('AC', 'ACTIVE'), ('NA', 'DISCONNECTED'), ('BL', 'BLOCKED')], default='AC', max_length=2)),
                ('color', models.IntegerField()),
                ('radius', models.IntegerField(null=True)),
                ('chief', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
                ('gamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('gg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.GiG')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='players',
            field=models.ManyToManyField(through='api.GiG', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('cost', models.IntegerField(default=1)),
                ('size', models.IntegerField(default=15)),
                ('taken', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
                ('whom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BotGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.IntegerField()),
                ('alpha', models.IntegerField()),
                ('speed', models.FloatField()),
                ('path', models.IntegerField()),
                ('cnt_stops', models.IntegerField()),
                ('begin_latit', models.FloatField()),
                ('begin_long', models.FloatField()),
                ('end_latit', models.FloatField()),
                ('end_long', models.FloatField()),
                ('user_latit', models.FloatField()),
                ('user_long', models.FloatField()),
                ('gamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
